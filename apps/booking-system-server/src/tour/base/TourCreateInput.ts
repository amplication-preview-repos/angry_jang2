/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { BoatCreateNestedManyWithoutToursInput } from "./BoatCreateNestedManyWithoutToursInput";
import {
  ValidateNested,
  IsOptional,
  IsString,
  MaxLength,
} from "class-validator";
import { Type } from "class-transformer";
import { PriceCreateNestedManyWithoutToursInput } from "./PriceCreateNestedManyWithoutToursInput";
import { ScheduleCreateNestedManyWithoutToursInput } from "./ScheduleCreateNestedManyWithoutToursInput";

@InputType()
class TourCreateInput {
  @ApiProperty({
    required: false,
    type: () => BoatCreateNestedManyWithoutToursInput,
  })
  @ValidateNested()
  @Type(() => BoatCreateNestedManyWithoutToursInput)
  @IsOptional()
  @Field(() => BoatCreateNestedManyWithoutToursInput, {
    nullable: true,
  })
  boats?: BoatCreateNestedManyWithoutToursInput;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  description?: string | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  name?: string | null;

  @ApiProperty({
    required: false,
    type: () => PriceCreateNestedManyWithoutToursInput,
  })
  @ValidateNested()
  @Type(() => PriceCreateNestedManyWithoutToursInput)
  @IsOptional()
  @Field(() => PriceCreateNestedManyWithoutToursInput, {
    nullable: true,
  })
  prices?: PriceCreateNestedManyWithoutToursInput;

  @ApiProperty({
    required: false,
    type: () => ScheduleCreateNestedManyWithoutToursInput,
  })
  @ValidateNested()
  @Type(() => ScheduleCreateNestedManyWithoutToursInput)
  @IsOptional()
  @Field(() => ScheduleCreateNestedManyWithoutToursInput, {
    nullable: true,
  })
  schedules?: ScheduleCreateNestedManyWithoutToursInput;
}

export { TourCreateInput as TourCreateInput };
